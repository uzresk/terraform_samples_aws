name: 'Terraform Configuration Drift Detection'

on:
  workflow_dispatch: 
  # 時間はプロジェクトに合わせて調整
  # schedule:
    # - cron: '41 3 * * *'

permissions: 
  contents: read
  checks: write

env:
  TF_VERSION: 1.5.4
  TFLINT_VERSION: 0.50.3
  # use ServicePrinsipal
  ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

  # use ManagedIdentity
  # ARM_USE_MSI: true
  # ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
  # ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
  # ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # 他が失敗してもcancelしない
      matrix:
        workdir: ["./DEV/s3_sample1"]
    # env:
      #this is needed since we are running terraform with read-only permissions
      # ARM_SKIP_PROVIDER_REGISTRATION: true
    outputs:
      tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        terraform_wrapper: false

    - name: Terraform Init
      working-directory: ${{ matrix.workdir }}
      run: terraform init

    # Terraform planを実行する
    # -detailed-exitcode = No Changedの場合は0, Planの実行時にエラーが出た場合は1, 差分がある場合は2になる
    # 
    - name: Terraform Plan
      id: tf-plan
      working-directory: ${{ matrix.workdir }}
      run: |
        export exitcode=0
        terraform plan -detailed-exitcode -no-color -out tfplan || export exitcode=$?
        echo $exitcode
        echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
        
        if [ $exitcode -eq 1 ]; then
          echo Terraform Plan Failed!
          exit 1
        else 
          exit 0
        fi
        
    # Planした結果を出力する(delimiterは)
    - name: Create String Output
      id: tf-plan-string
      working-directory: ${{ matrix.workdir }}
      run: |
        TERRAFORM_PLAN=$(terraform show -no-color tfplan)
        
        delimiter="$(openssl rand -hex 8)"
        echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
        echo "## Terraform Plan Output" >> $GITHUB_OUTPUT
        echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo '```terraform' >> $GITHUB_OUTPUT
        echo "$TERRAFORM_PLAN" >> $GITHUB_OUTPUT
        echo '```' >> $GITHUB_OUTPUT
        echo "</details>" >> $GITHUB_OUTPUT
        echo "${delimiter}" >> $GITHUB_OUTPUT
        
    # サマリを出力
    - name: Publish Terraform Plan to Task Summary
      env:
        SUMMARY: ${{ steps.tf-plan-string.outputs.summary }}
      run: |
        echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY

    # 差分があった場合(2)は、exit code 1を返却
    - name: Error on Failure
      if: steps.tf-plan.outputs.exitcode == 2
      run: exit 1

